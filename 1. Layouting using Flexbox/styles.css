.container {
    max-width: 1200px;
    margin: auto auto;
}

.box {
    width: 50px;
    height: 50px;
    margin: 5px;
    background-color: #f2f2f2;
    border: 1px solid #ccc;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 24px;
}

.box.tall {
    height: 100px;
}

.box.wide {
    width: 100px;
}


.red{
    background-color: red;
}

.blue{
    background-color: blue;
}

.green{
    background-color: green;
}


/* TODO 1 */
.todo-1-container {
    /* TODO 1.1.1 Set the display of this div to flex*/
    display: flex;

    /* TODO 1.1.2 Set the flex direction to row. Then set it to column. What's the difference?*/
    /* Answer: When I set it into column, the difference between them are that row - horizontal while column - vertical */

    /* TODO 1.1.3 Set the flex direction to row. Then enable flex wrap. What does wrap do? */
    /* Answer: The wrap is enable then the flex container allows to wrap its flex items onto multiple lines based on available space. */

    /* Todo 1.1.4 Set the gap of the container to 10px. Now change it to 20px. What does gap do? */
    /* Answer: By using the gap, it will creates space between flex items. Increasing it into 20px space between items. */

}

/* TODO 2 */
.todo-2-container{
    /* TODO 1.2.1 Set the display to flex and flex direction to row */
    display: flex;
    /* TODO 1.2.2 Justify the content to start, then end, then center. Make sure to see how the position of the divs change*/
    justify-content: start;
    /* TODO 1.2.3 Align the items start, then end, then center. Make sure to see how the position of the divs change*/
    align-items: start;
    /* TODO 1.2.4 Set the flex direction to column and play around with justify-content and align-items */
    flex-direction: column;
    justify-content: center;
    align-items: center;

}

/* TODO 3 */
.todo-3-container{
    /* Todo 1.3.1 Set the display to flex and align items center */
    display: flex;
    align-items: center;
}

/* Select the red box */
.todo-3-container .red{
    /* Todo 1.3.2 Align this item to start. Try out the other possible values. What happens? */
    align-items: flex-start;
    /* Answer: The red box aligns itself to the start of the container. There are also possible values like flex-end, center, baseline, or stretch for different alignments. */
}

/* Select the green box */
.todo-3-container .green{
    /* Todo 1.3.3 Set flex grow to 1 */
    flex-grow: 1;
}

/* Select the blue box */
.todo-3-container .blue{
    /* Todo 1.3.4 Set flex grow to 2. Try out the other values. What happens? */
    flex-grow: 2;
    /* Answer: The blue box grows at twice the rate of other flex items. */
}

/* TODO 4 */
.todo-4-container{
    /* Set the display to flex */
    display: flex;
}

/* Select the red box */
.todo-4-container .red{
    /* Set margin left to auto.  */
    margin-left: auto;
}

/* Select the green box */
.todo-4-container .green{
    /* Set margin right to auto */
    margin-right: auto;
    order: 2;
}

/* Select the blue box */
.todo-4-container .blue{
    /* Set the order to  1. Try chaging the order of the other divs. What does order do?*/
    order: 1;
    /* Answer: The blue box will appear first. */
}




